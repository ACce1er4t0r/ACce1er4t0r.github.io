{"pages":[],"posts":[{"title":"backup: Markdown Syntax","text":"A small collection of Markdown general syntax index Heading Quote Font Dividing Line List Table Code Pic Hyperlink Autolink HTML Tags LaTeX Task List HeadingLevel 1 heading1# Level 1 Heading Level 2 heading1## Level 2 heading Level 3 heading1### Level 3 heading Level 4 heading1#### Level 4 heading Level 5 heading1##### Level 5 heading Level 6 heading1###### Level 6 heading Error Cases####### 7 Up to level 6 only ####### 712####### 7=== ######## 812######## 8--- If it is on the top line of === or ---, it will automatically become a title (corresponding to Level 1 and Level 2) Back to index Quote This is a quote! And it can overlay seems that you can always add… 12345&gt; This is a quote!&gt;&gt; And&gt;&gt;&gt; it can&gt;&gt;&gt;&gt; overlay&gt;&gt;&gt;&gt;&gt; seems that you can always add... Meow MeowMeow MeowMeow Meow 123&gt; Meow MeowMeow MeowMeow Meow It needs a line break to get the quote out Back to index FontBold Italic Also italic Bold and italic delete 12345**Bold***Italic*_Also italic_***Bold and italic***~~delete~~ Back to index Dividing Line 1234-----test--******* Why can’t you add text in the middle of the split line? ￣へ￣ Back to index ListNon-numeric list dot (〃’▽’〃) dot (｀・ω・´) and dot (￣.￣) 123+ dot (〃'▽'〃)* dot (｀・ω・´)- and dot (￣.￣) Numbers List o(￣▽￣)ｄ （￣︶￣）↗ ( • ̀ω•́ )✧ 1231. o(￣▽￣)ｄ 2. （￣︶￣）↗3. ( • ̀ω•́ )✧ List indent First Second Third Fourth OwO 123451. First 2. Second 3. Third 4. Fourth + OwO Back to index Table What to write? I don’t know… Then write freely. This is the content This is also content also~ Without a colon or colon on the left Both left and right is centered On the right is the right 1234|What to write?|I don't know...|Then write freely.||---------|:-----:|------:||This is the content | This is also content | also~||Without a colon or colon on the left|Both left and right is centered|On the right is the right| Back to index Code123456#include &lt;iostream&gt;using namespace std;int main() { cout &lt;&lt; &quot;Welcome to my blog~&quot; &lt;&lt; endl; return 0;} 12345678``` c++#include &lt;iostream&gt;using namespace std;int main() { cout &lt;&lt; &quot;Welcome to my blog~&quot; &lt;&lt; endl; return 0;}\\``` If it’s a single line of code, you can just `code` print &quot;Welcome to my blog~&quot; 1`print &quot;Welcome to my blog~&quot;` ``` can be combined with setting code highlighting Back to index Picture 12![avatar~](https://i.loli.net/2018/10/10/5bbdef9771e6a.jpg &quot;avatar&quot;)![pic_alt](pic_address &quot;pic_title&quot;) Back to index Hyperlink test 404 in China Still can be used when looking for some Chinese materials Home Page 123456+ [test](https://sm.ms &quot;test&quot;)+ [404 in China](https://www.google.com &quot;The world's largest search engine&quot;)+ [Still can be used when looking for some Chinese materials](https://www.baidu.com &quot;Learn Baidu well ah&quot;)+ [Home Page](https://aslin.site &quot;Home Page~&quot;)[alt](address &quot;title&quot;) 混合~ 1[![Try mixing](https://i.loli.net/2018/10/10/5bbdefcf4bc8f.jpg &quot;Try mixing&quot;)](https://aslin.site) Back to index Autolinklkjlkj174@gmail.com 1&lt;lkjlkj174@gmail.com&gt; Back to index HTML TagsCtrlZaZa 123&lt;kbd&gt;Ctrl&lt;/kbd&gt;Z&lt;sub&gt;a&lt;/sub&gt;Z&lt;sup&gt;a&lt;/sup&gt; Back to index LaTeX 公式 LaTeX Back to index Task List Heading Quate Font Diving Line List Table Code Picture Hyperlink Anchor（toc） Autolink LaTeX Footnotes Video (iframe) Embedded CSS Customized List Flowchart Timing Chart HTML Tags TOC Task list 123456789101112131415161718192021- [x] Heading- [x] Quate- [x] Font- [x] Diving Line- [x] List- [x] Table- [x] Code- [x] Picture- [x] Hyperlink- [x] Anchor（toc）- [x] Autolink- [x] LaTeX- [ ] Footnotes- [ ] Video (iframe)- [ ] Embedded CSS- [ ] Customized List- [ ] Flowchart- [ ] Timing Chart- [x] HTML Tags- [x] TOC- [x] Task list Back to index Try to translate the original blog, still lack of English skills emmmm","link":"/2022/03/08/backup-Markdown-Syntax/"},{"title":"backup: HCTF2018 Warmup Writeup","text":"A easy challenge from HCTF 2018 The original plan was not to give the source code to come. Then I was told that if I didn’t give the source code, it would be impossible for people to solve it. And there was no easy Challenge, so the source code was given. Okay, the process of solving this Challenge: First of all, open the website and then look at F12, the comments hinted that there was source.php, a simple php audit, you can find that the problem appears in the following code 123456789$_page = urldecode($page);$_page = mb_substr( $_page, 0, mb_strpos($_page . '?', '?'));if (in_array($_page, $whitelist)) { return true;} It can be bypassed with %253f, combined with the flag in ffffllllaaaagggg in hint.php (Sorry. Seems like I should have told flag in / in the challenge description)…","link":"/2022/03/08/backup-HCTF2018-Warmup-Writeup/"},{"title":"backup: Digital Circuit Course Design, Music Player with VGA Display","text":"Busy with digital circuit labs. It’s been a long time since I coded QAQ. Nothing coded recently, so I just pull up the digital electricity course design QWQ~ Let’s start with a whole This is the top of the whole project, and then it is separate to each module Phase-Locked Loop Crossover This Phase-Locked Loop is used for dividing the frequency. My FPGA board is a Cyclone IV and comes with a 20MHz clock signal. The buzzer needs 1MHz, the music needs 4KHz, and the VGA display 640 * 480 * 60Hz needs 25MHz Music Module This is the music module, mainly divided into the number of notes recorded constep, recorded notes Rom, notes converted into buzzer frequency INX2CODE and sound SPK0 The constep is simply a counter that records the number of notes stored in the mif. The ROM is needed to turn the score into a mif file and then use the ROM module to generate the device. INX2CODE12345678910111213141516171819202122232425module INX2CODE (INX, F_CODE); input[3:0] INX; output[10:0] F_CODE; reg[10:0] F_CODE; always @(INX) case (INX) 0 : F_CODE &lt;= 11'H7FF; 1 : F_CODE &lt;= 11'H305; 2 : F_CODE &lt;= 11'H390; 3 : F_CODE &lt;= 11'H40C; 4 : F_CODE &lt;= 11'H45C; 5 : F_CODE &lt;= 11'H4AD; 6 : F_CODE &lt;= 11'H50A; 7 : F_CODE &lt;= 11'H55C; 8 : F_CODE &lt;= 11'H582; 9 : F_CODE &lt;= 11'H5C8; 10 : F_CODE &lt;= 11'H606; 11 : F_CODE &lt;= 11'H640; 12 : F_CODE &lt;= 11'H656; 13 : F_CODE &lt;= 11'H684; 14 : F_CODE &lt;= 11'H69A; 15 : F_CODE &lt;= 11'H6C0; default : F_CODE &lt;= 11'H6C0; endcaseendmodule SPK0 VGA Driver Convert the image to bmp format, then to mif, and save it to ROM like a note to generate a device. vga_driver12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455module vga_driver( clk, hs,vs, r,g,b, rgbin,dout ); input clk; output hs,vs; output r,g,b; input rgbin; output[15:0] dout; reg[9:0] hcnt,vcnt; reg r,g,b; reg hs,vs; assign dout={vcnt[7:0],hcnt[7:0]}; always @(posedge clk) if(hcnt&lt;800) hcnt&lt;=hcnt+1; else hcnt&lt;={10{1'b0}}; always @(posedge clk) if(hcnt==640+8) if(vcnt&lt;525) vcnt&lt;=vcnt+1; else vcnt&lt;={10{1'b0}}; always @(posedge clk) if((hcnt&gt;=640+8+8)&amp;(hcnt&lt;640+8+8+96)) hs&lt;=1'b0; else hs&lt;=1'b1; always @(vcnt) if((vcnt&gt;=480+8+2)&amp;(vcnt&lt;480+8+2+2)) vs&lt;=1'b0; else vs&lt;=1'b1; always @(posedge clk) if(hcnt&lt;256&amp;vcnt&lt;256) begin r=rgbin; g=rgbin; b=rgbin; end else begin r=0; g=0; b=0; endendmodule Selector 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667module choose2_1( EN, badapple,sakura, HS1,VS1,HS2,VS2, SPK1,SPK2, R1,R2,G1,G2,B1,B2, SPK,R,G,B,HS,VS ); input EN,badapple,sakura; input HS1,VS1,HS2,VS2; input SPK1,SPK2; input R1,R2,B1,B2; input G1,G2; output SPK; output HS,VS; output R,B; output G; reg SPK; reg HS,VS; reg R,B; reg G; always @ ( EN, badapple,sakura, HS1,VS1,HS2,VS2, SPK1,SPK2, R1,R2,G1,G2,B1,B2 ) if(EN==1) begin SPK=1; R=0; G=0; B=0; VS=0; HS=0; end else if({sakura,badapple}==2'B10) begin SPK=SPK1; R=R1; G=G1; B=B1; VS=VS1; HS=HS1; end else if({sakura,badapple}==2'B01) begin SPK=SPK2; R=R2; G=G2; B=B2; VS=VS2; HS=HS2; end else begin SPK=1; R=0; G=0; B=0; VS=0; HS=0; endendmodule I do not have a VGA monitor can only go to a friend’s bedroom to play ~ Source code: Github","link":"/2022/03/09/backup-Digital-Circuit-Course-Design-Music-Player-with-VGA-Display/"},{"title":"backup: No Key Virginia Encryption Crack","text":"A script to crack Virginia encryption without a password 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182import re, mathdef openfile(fileName): file = open(fileName,'r') text = file.read() file.close() text = text.replace('\\n','') return textdef charOffset(char, offset): if(offset &lt; 0): offset += 26 if char.islower(): return chr((ord(char) - 97 + offset) % 26 + 97) else: return chr((ord(char) - 65 + offset) % 26 + 65)def Vigenere(strIn, key, encode): strOut = &quot;&quot; j = 0 for c in strIn: if c.isalpha(): offset = ord(key[j % len(key)]) - 97 j += 1 if encode == False: offset = -offset strOut += charOffset(c, offset) else: strOut += c return strOutdef deVigenereAuto(ciphertext): best_key = &quot;&quot; count = [] cipherMin = ciphertext.lower() cipherMin = re.sub('[^a-z]', '', ciphertext.lower()) freq = [8.167, 1.492, 2.782, 4.253, 12.702, 2.228, 2.015, 6.094, 6.966, 0.153, 0.772, 4.025, 2.406, 6.749, 7.507, 1.929, 0.095, 5.987, 6.327, 9.056, 2.758, 0.978, 2.360, 0.150, 1.974, 0.074]; for best_len in range(3, 13): sum = 0 for j in range(0, best_len): for i in range(0, 26): count.append(0) i = j while i &lt; len(cipherMin): count[ord(cipherMin[i]) - 97] += 1 i += best_len ic = 0 num = len(cipherMin)/best_len for i in range(0, len(count)): ic += math.pow(count[i]/num, 2) sum += ic if sum/best_len &gt; 0.065: break for j in range(0, best_len): for i in range(0, 26): count[i] = 0 i = j while i &lt; len(cipherMin): count[ord(cipherMin[i]) - 97] += 1 i += best_len max_dp = -1000000 best_i = 0 for i in range(0, 26): cur_dp = 0.0 for k in range(0, 26): cur_dp += freq[k] * count[(k + i) % 26] if cur_dp &gt; max_dp: max_dp = cur_dp best_i = i best_key += chr(best_i + 97) print &quot;best_key : &quot; + best_key print &quot;plaintext : &quot; + Vigenere(ciphertext, best_key, False)if __name__ == '__main__': ciphertext = openfile('ciphertext2.txt') a = raw_input(&quot;did you have key?(Y/N)&quot;) a = a.upper() if a == 'N': deVigenereAuto(ciphertext) if a == 'Y': key = raw_input(&quot;key?&quot;) print &quot;plaintext : &quot; + Vigenere(ciphertext, key, False)","link":"/2022/03/09/backup-No-Key-Virginia-Encryption-Crack/"},{"title":"backup: Configuring the kernel environment from scratch","text":"Configuring kernel environment Compiling kernel Download kernel source code: https://www.kernel.org/ Install necessary dependencies 12sudo apt-get updatesudo apt-get install git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc Unzip and enter the directory 1make menuconfig ps: There may be errors that require flex and bison, apt-get install can fix them Nothing should be changed, just save 123456enter kernel hackingSelect the following items Kernel debugging Compile-time checks and compiler options —&gt; Compile the kernel with debug info和Compile the kernel with frame pointers KGDBThen save and exit ps: Remember not to make the terminal window too small when make menuconfig. Otherwise you will be prompted and not allowed to complete the next steps. ```bashmake bzImage Setup is 17244 bytes (padded to 17408 bytes).System is 7666 kBCRC 5c77cbfeKernel: arch/x86/boot/bzImage is ready (#1) 123456789101112131415161718192021222324### Add a simple syscallHelloworld againCreate a `helloworld` directory in the root of the source code```bash$ pwd/home/test/test_kernel/linux-xxxxxxx/helloworld$ tree.├── helloworld.c└── Makefile$ cat helloworld.c #include &lt;linux/kernel.h&gt;asmlinkage long sys_helloworld(void){ printk(&quot;{==kernel==} hello world\\n&quot;); return 0;} $ cat Makefile obj-y=helloworld.o Then go to the Makefile in the root of the source code and add helloworld/ Then go to include/linux/syscalls.h and add the function prototype Add system call numbers to arch/x86/entry/syscalls/syscall_32.tbl and arch/x86/entry/syscalls/syscall_64.tbl After that, compile the kernel 1make bzImage It will be able to get bzImage in ./arch/x86/boot/ Compile busyboxAs usual, download from the official website https://busybox.net/ Unzip and enter the directory 1make menuconfig Selected Build static binary (no shared libs) within Settings 1make install After compiling, a _install directory will appear, then: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$ cd _install$ mkdir proc$ mkdir sys$ touch init$ chmod +x init$ cat init#!/bin/shecho &quot;{==DBG==} INIT SCRIPT&quot;mkdir /tmpmount -t proc none /procmount -t sysfs none /sysmount -t debugfs none /sys/kernel/debugmount -t tmpfs none /tmp# insmod /xxx.ko # load komdev -s # We need this to find /dev/sda laterecho -e &quot;{==DBG==} Boot took $(cut -d' ' -f1 /proc/uptime) seconds&quot;setsid /bin/cttyhack setuidgid 1000 /bin/sh #normal user# exec /bin/sh #root// By the way, write a test case and put it in _install$ touch test.c$ cat test.c// gcc test.c -static -o test#include &lt;unistd.h&gt;int main(void){ syscall(1337); return 0;}$ gcc test.c -static -o test// Write a script to package rootfs.img$ cd ../../$ touch makeimg$ chmod +x makeimg$ cat makeimg#!/bin/shecho &quot;Generate rootfs.img&quot;cd busybox-x.xx.x/_installfind . | cpio -o --format=newc &gt; ../../rootfs.img$ ls busybox-x.xx.x linux-x.x.x qemu-x.xx.x makeimg$ ./makeimg$ lsbusybox-x.xx.x linux-x.x.x qemu-x.xx.x makeimg rootfs.img Install qumuHere using source code compilation 123456wget https://download.qemu.org/qemu-4.1.0.tar.xztar xvJf qemu-4.1.0.tar.xzcd qemu-4.1.0./configuremakemake install qemu bootGet a script from veritas501 1234567891011121314151617181920$ lsbusybox-x.xx.x linux-x.x.x qemu-x.xx.x makeimg rootfs.img$ touch runqemu$ chmod +x runqemu$ cat runqemu#!/bin/shqemu-system-x86_64 \\-m 64M \\-kernel /home/test/test_kernel/linux-x.x.x/arch/x86/boot/bzImage \\-initrd /home/test/test_kernel/rootfs.img \\-append &quot;root=/dev/ram rw console=ttyS0 oops=panic panic=1 kalsr&quot; \\-netdev user,id=t0, -device e1000,netdev=t0,id=nic0 \\-nographic \\-monitor /dev/null \\-smp cores=2,threads=1 \\-enable-kvm \\-cpu kvm64,+smep \\# -gdb tcp::1234 \\# -S Run Script 1$ ./runqemu Done! Referencekernel环境配置 As well, thanks for MiGo and Aris’ guidance OWO Other possible problemsFreely write pkg-config not found sudo apt-get install pkg-config glib-2.40 gthread-2.0 is required to compile QEMU Use apt-cache search all | grep glib to find glib, can find glib’s name is libglib2.0-dev, then apt install libglib2.0-dev ERROR: pixman &gt;= 0.21.8 not present. Please install the pixman devel package. Solution:Use apt-cache search pixman to find, then apt install libpixman-1-dev Virtual machines remember to enable CPU virtualization VNC server running on 127.0.0.1:5900 sudo apt-get install libsdl1.2-dev sudo apt-get install gcc libsdl1.2-dev zlib1g-dev libasound2-dev pkg-config libgnutls-dev pciutils-dev sudo apt-get install libsdl2-dev sudo apt-get install libsdl2-2.0 sudo apt install libelf-dev","link":"/2022/03/09/backup-Configuring-the-kernel-environment-from-scratch/"}],"tags":[],"categories":[]}